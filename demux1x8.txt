//Design Code
module demux1x8(output reg out0,out1,out2,out3,out4,out5,out6,out7,input s2,s1,s0,in);
  always@*
    begin
      out0=0;out1=0;out2=0;out3=0;out4=0;out5=0;out6=0;out7=0;
      case({s2,s1,s0})
        3'b000 : out0=in;
        3'b001 : out1=in;
        3'b010 : out2=in;
        3'b011 : out3=in;
        3'b100 : out4=in;
        3'b101 : out5=in;
        3'b110 : out6=in;
        3'b111 : out7=in;
      endcase
    end
endmodule

//Test Bench Code
module tb();
  wire out0,out1,out2,out3,out4,out5,out6,out7;
  reg s2,s1,s0,in;
  demux1x8 DUT(out0,out1,out2,out3,out4,out5,out6,out7,s2,s1,s0,in);
  integer i;
  initial
    begin
      in=1;
      for(i=0;i<8;i=i+1)
        begin
          {s2,s1,s0}=i;
          #10;
        end
    end
  
  initial
    begin
      $timeformat(-9,0,"ns",10);
      $monitor("time=%0t,in=%b,s2=%b,s1=%b,s0=%b,out0=%b,out1=%b,out2=%b,out3=%b,out4=%b,out5=%b,out6=%b,out7=%b",$time,in,s2,s1,s0,out0,out1,out2,out3,out4,out5,out6,out7);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule
